#! /usr/bin/env node

'use strict'

const [, , ...params] = process.argv
const str = params.join(' ').normalize('NFD').replace(/[\u0300-\u036f]/g, "").replace(/[`~!@#$%^&*()_|+\-=?;:'".<>\{\}\[\]\\\/]/gi, '')
const array = str.split(',')
for (let i = 0; i < array.length; i++) {
  array[i] = array[i].trim()
  if (parseInt(array[i])) {
    array[i] = parseInt(array[i])
  }
}

const makeHttpRequest = (url) => {
  return new Promise((resolve) => {
    const http = require('http')

    http.get(url, (response) => {
      let data = ''

      response.on('data', (chunk) => {
        data += chunk
      });

      response.on('end', () => {
        resolve(data)
      });

    }).on("error", (error) => {
      console.log("Error: " + error.message)
    });
  });
};

const getWeatherData = (array) => {
  return new Promise((resolve) => {
    const weatherDataPromises = []

    for (let i = 0; i < array.length; i++) {
      let url = ''

      if (typeof array[i] === 'number') {
        url = `http://api.openweathermap.org/data/2.5/weather?q=${array[i]}&APPID=1a8ac7b8f66d5a48acf443e3fc063544`
      } else if (typeof array[i] === 'string') {
        url = `http://api.openweathermap.org/data/2.5/weather?q=${array[i]}&APPID=1a8ac7b8f66d5a48acf443e3fc063544`
      }

      weatherDataPromises.push(makeHttpRequest(url))
    }
    Promise.all(weatherDataPromises)
      .then(data => {
        for (let i = 0; i < data.length; i++) {
          data[i] = JSON.parse(data[i])
        }
        resolve(data)
      })
  })
}

const getTimeData = (arr) => {
  return new Promise((resolve, reject) => {
    const timeDataPromises = []

    for (let i = 0; i < arr.length; i++) {
      let url = `http://api.worldweatheronline.com/premium/v1/tz.ashx?q=${arr[i]}&key=af584370a5724491ad643957190505&format=json`;

      timeDataPromises.push(makeHttpRequest(url))
    }

    Promise.all(timeDataPromises)
      .then(data => {
        for (let i = 0; i < data.length; i++) {
          data[i] = JSON.parse(data[i])
        }
        resolve(data)
      });
  });
};

const promises = [getWeatherData(array), getTimeData(array)]

Promise.all(promises)
  .then(data => {
    for (let i = 0; i < array.length; i++) {
      const weatherData = data[0]
      const timeData = data[1]

      console.log(array[i])
      if (!(i in weatherData) || !('main' in weatherData[i]) || !('temp' in weatherData[i].main)) {
        console.log("No data available on this city")
        console.log()
        continue;
      }

      if (!(i in timeData) || !('data' in timeData[i]) || !('time_zone' in timeData[i].data) || !(0 in timeData[i].data.time_zone)) {
        console.log("no data available")
        console.log()
        continue;
      }
      
      const weatherKelvin = weatherData[i].main.temp
      console.log('weather(F): ', JSON.stringify(weatherKelvin))

      const localtime = timeData[i].data.time_zone[0].localtime
      console.log('Date / time:', JSON.stringify(localtime))
      console.log()

    }
  })

